@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap");
:root {
  --HexagonLargeur: 65px;
  --HexagonHauteur: 36px;
  --HexagonColor: #0e1547;
}

body {
  box-sizing: border-box;
  background-color: #000000;
}

.hexagonContainer {
  position: fixed;
  left: -100px;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}
.hexagonContainer .perspective {
  position: relative;
  width: var(--HexagonLargeur);
  height: calc(var(--HexagonHauteur) * 2);
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 800px;
  color: #000000;
}
.hexagonContainer .perspective .hexagon {
  position: relative;
  width: var(--HexagonLargeur);
  height: var(--HexagonHauteur);
  background-color: var(--HexagonColor);
  display: inline-block;
  box-sizing: border-box;
  rotate: 30deg;
  transition: transform 0.1s ease;
  transform-origin: center center;
  will-change: background-color, transform;
}
.hexagonContainer .perspective .hexagon::before, .hexagonContainer .perspective .hexagon::after {
  content: "";
  position: absolute;
  width: 0;
  border-left: calc(var(--HexagonLargeur) / 2) solid transparent;
  border-right: calc(var(--HexagonLargeur) / 2) solid transparent;
}
.hexagonContainer .perspective .hexagon::before {
  bottom: 100%;
  border-bottom: calc(var(--HexagonHauteur) / 2) solid var(--HexagonColor);
}
.hexagonContainer .perspective .hexagon::after {
  top: 100%;
  border-top: calc(var(--HexagonHauteur) / 2) solid var(--HexagonColor);
}
.hexagonContainer .lightRay {
  position: absolute;
  width: 100px;
  height: 100px;
  top: 0;
  left: 0;
  background: radial-gradient(circle, rgb(255, 255, 255) 0%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0) 100%);
  pointer-events: none;
  z-index: -1;
  transform: translate(-50%, -50%);
  filter: blur(15px);
}
.hexagonContainer .lightRay1 {
  transition: transform ease-out;
}
.hexagonContainer .lightRay2 {
  transition: transform 0.02s ease-out, opacity 0.02s ease-out;
  opacity: 0.8;
}
.hexagonContainer .lightRay3 {
  transition: transform 0.04s ease-out, opacity 0.04s ease-out;
  opacity: 0.6;
}
.hexagonContainer .lightRay4 {
  transition: transform 0.06s ease-out, opacity 0.06s ease-out;
  opacity: 0.4;
}
.hexagonContainer .lightRay5 {
  transition: transform 0.08s ease-out, opacity 0.08s ease-out;
  opacity: 0.2;
}
.hexagonContainer .lightRay6 {
  transition: transform 0.1s ease-out, opacity 0.1s ease-out;
  opacity: 0.1;
}

.light-bar {
  position: absolute;
  width: 3px;
  height: 300px;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0));
  opacity: 0;
  pointer-events: none;
  z-index: -1;
  transition: opacity 1s ease-in-out, transform 2s linear;
}/*# sourceMappingURL=style.css.map */